<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.java7_4.mapper.PostMapper">

    <resultMap id="PostResultMap" type="Post">
        <result column="post_id" property="postId" />
        <result column="user_id" property="userId" />
        <result column="post_img_path" property="postImgPath" />
        <result column="post_text" property="postText" />
        <result column="post_like" property="postLike" />
        <result column="post_collect" property="postCollect" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_user" property="createUser" />
        <result column="update_user" property="updateUser" />
        <result column="post_tags" property="postTags" />
    </resultMap>
    <resultMap id="PostDTOResultMap" type="PostDTO">
        <result column="post_id" property="postId" />
        <result column="user_id" property="userId" />
        <result column="post_img_path" property="postImgPath" />
        <result column="post_text" property="postText" />
        <result column="post_like" property="postLike" />
        <result column="post_collect" property="postCollect" />
        <result column="user_profile_path" property="userProfilePath" />
        <result column="create_time" property="createTime" />
        <result column="post_tags" property="postTags" />
    </resultMap>
    <insert id="save" parameterType="com.example.java7_4.entity.Post" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO tb_post (user_id, post_img_path, post_tags,post_text, post_like,post_collect,create_time,update_time,create_user,update_user)
        VALUES (#{userId}, #{postImgPath}, #{postText}, #{postLike},#{postCollect},#{createTime},#{updateTime},#{createUser},#{updateUser})
    </insert>

    <select id="selectAll" resultMap="PostResultMap">
        select * from tb_post;
    </select>


    <select id="getSearchedPosts" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id and post_text LIKE CONCAT('%', #{searchText}, '%');
    </select>


    <select id="getPagedSearchedPosts" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id and post_text LIKE CONCAT('%', #{searchText}, '%')
    </select>

    <select id="selectById" resultMap="PostResultMap">
        select * from tb_post
        where post_id=#{postId};
    </select>
    <select id="selectMePostsWithUserAvatar" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id AND tb_post.user_id=#{userId};
    </select>
    <select id="selectPostsWithUserAvatar" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id;
    </select>

    <select id="selectPagedPostsWithUserAvatar" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id
    </select>
    <select id="getPostByPostId" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id AND #{postId}=tb_post.post_id
    </select>
    <select id="getPostsWithUserAvatarWithOrder" resultType="com.example.java7_4.entity.PostDTO">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time,post_tags from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id
        <choose>
            <when test="sortType == 'like_desc'">
                ORDER BY tb_post.post_like DESC
            </when>
            <when test="sortType == 'collect_desc'">
                ORDER BY tb_post.post_collect DESC
            </when>
            <when test="sortType == 'time_asc'">
                ORDER BY tb_post.create_time ASC
            </when>
            <when test="sortType == 'time_desc'">
                ORDER BY tb_post.create_time DESC
            </when>
            <otherwise>
                -- 如果 sortType 没有匹配的值，这里可以选择默认的排序规则，例如按帖子 ID 降序
                ORDER BY tb_post.post_id DESC
            </otherwise>
        </choose>
    </select>
    <select id="getPagedSearchedPostsWithOrder" resultMap="PostDTOResultMap">
        select post_id,tb_post.user_id,post_img_path,post_tags,post_text,post_like,post_collect,user_profile_path,user_name,tb_post.create_time from tb_post,tb_user
        where tb_post.user_id=tb_user.user_id
        <choose>
            <when test="searchType == 'content'">
                and post_text LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchType == 'username'">
                and user_name LIKE CONCAT('%', #{searchText}, '%')
            </when>
        </choose>
        <choose>
            <when test="sortType == 'like_desc'">
                ORDER BY tb_post.post_like DESC
            </when>
            <when test="sortType == 'collect_desc'">
                ORDER BY tb_post.post_collect DESC
            </when>
            <when test="sortType == 'time_asc'">
                ORDER BY tb_post.create_time ASC
            </when>
            <when test="sortType == 'time_desc'">
                ORDER BY tb_post.create_time DESC
            </when>
            <otherwise>
                -- 如果 sortType 没有匹配的值，这里可以选择默认的排序规则，例如按帖子 ID 降序
                ORDER BY tb_post.post_id DESC
            </otherwise>
        </choose>
    </select>

    <update id="updateById">
        update tb_post
        set post_like = #{postLike} where post_id=#{postId};
    </update>
    <update id="updatePostCollectById">
        update tb_post
        set post_collect = #{postCollect} where post_id=#{postId};

    </update>


</mapper>
